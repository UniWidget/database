//Author Aiskikan
var jsencrypt_unicode_cracking_code = ""
var window = this.window;
var CryptoJS = require("crypto-js");
window.eval(atob(jsencrypt_unicode_cracking_code));
const types = {
	isInvisibleWidget: true,
	type: "CO_RSA_WIDGET",
	icon: "",
	title: "CoRSA",
	version: "1.0.0",
	isGlobalWidget: true,
	properties: [],
	methods: [],
	events: [],
};

class Widget extends InvisibleWidget {
	constructor(props) {
		super(props);


	}

}
types['methods'].push({
	key: 'tip',
	label: '必读Tip：本控件使用了修改版的jsencrypt，支持Unicode，和超长字符串，但因为js性能限制，建议不要使用太长的私钥和字符串',
	params: [],

})
Widget.prototype.tip = function () {

}

types['methods'].push({
	key: 'genPrivateKey',
	label: '生成私钥',
	params: [
		{
			key: 'key_len',
			label: '私钥长度(必须为1024，2048，3072，4096等值)',
			valueType: 'number',
			dropdown: [
				{ label: '1024', value: 1024, },

				{ label: '2048', value: 2048, },

				{ label: '3072', value: 3072, },

				{ label: '4096', value: 4096, },
			],
		},

	],
	valueType: 'string',

})
Widget.prototype.genPrivateKey = function (key_len,) {
	var jse = new JSEncrypt();
	jse.default_key_size = key_len;
	return jse.getPrivateKey();
}

types['methods'].push({
	key: 'genPublicKey',
	label: '生成公钥',
	params: [
		{
			key: 'private_key',
			label: '私钥',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDH/VXZB2odguwMBOQr9LPBXomOZtqcs3q4HCZlF40asuBrwDZr\nZjLd6tp3e0C6ScoZdSIAwe9xYELyQywC7XFAqP2T1cOytxdYJ61neNL5eCVq4Vgf\nwzChl+Y9oh9JOZBOg+aQFrm6/TEQmDbc/UiHMXqPpiuccGxX1kZU85iANQIDAQAB\nAoGAPkBtaJEWRvlp4JPlMomJKrfyuZDqm7yChqy8hts94QGtOd0rE2NMkid4uZh0\nHYi6kBIV84Zqsi/0ptSh7odaqOifYfBfgvL7oLMTc1+SRPFGftyXCWiNMuto/CeB\nMPptOvBsNwXsTElWXtENf6NtzmUqdfcLf6ig3pOr8/XiHAECQQD1No6NZZZcZp9s\nM7m8OI9SlgmS9W/FeRKfYkQ9pIDwDp2gE/PeecxR2kVBoEFYXb/RhBRKuk47Sv9U\nGOxWa+/RAkEA0Ml/kDrui0xIgpnsi1cYYg2r9ZCXgCTXi/FOhNbV/tZayG0e50q/\nNqZnQSaPyUqHsF2/AKty5jckC/vrgJYnJQJACmESy51fLe4SFWxjEjp6po4/PX8y\nCfPD/AcWyF0sL/0OYvY1Pld9dIF+qPZ1jZ36Po4OpdMY+J2GDTM43beX4QJBALhg\nqTEiidQj2ojTC2yFzneQ4UGrnc7BOkRQJenzmulAPM1wZ/ETNkc5rkd/mUzGb4tV\nTj52KbKaEVAv+WoFr60CQHXgJJyzt3b/DzjBjNB+X5c93fULNz/BM0ES73EzNze5\n/+Bsg+wiQWgDJcXdAWEXSmABuviiHAMBhyaCM58+g68=\n-----END RSA PRIVATE KEY-----'
		},

	],
	valueType: 'string',

})
Widget.prototype.genPublicKey = function (private_key,) {
	var jse = new JSEncrypt();
	jse.setPrivateKey(private_key);
	return jse.getPublicKey();
}

types['methods'].push({
	key: 'rsa_encryptUnicodeLong',
	label: 'RSA加密算法-加密（调用自制PKCS1Padding）',
	params: [
		{
			key: 'text',
			label: '文本',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '你好Coco！'
		},
		{
			key: 'public_key',
			label: '公钥',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDH/VXZB2odguwMBOQr9LPBXomO\nZtqcs3q4HCZlF40asuBrwDZrZjLd6tp3e0C6ScoZdSIAwe9xYELyQywC7XFAqP2T\n1cOytxdYJ61neNL5eCVq4VgfwzChl+Y9oh9JOZBOg+aQFrm6/TEQmDbc/UiHMXqP\npiuccGxX1kZU85iANQIDAQAB\n-----END PUBLIC KEY-----'
		},

	],
	valueType: 'string',

})
Widget.prototype.rsa_encryptUnicodeLong = function (text, public_key) {
	var jse = new JSEncrypt();
	jse.setPublicKey(public_key);
	return jse.encryptUnicodeLong(text);
}

types['methods'].push({
	key: 'rsa_decryptUnicodeLong',
	label: 'RSA加密算法-解密（调用自制PKCS1Padding）',
	params: [
		{
			key: 'text',
			label: '密文',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: 'DxAFRJT7q3E4LPciUAB5OON/BWo+6by6yDVVN5fM9Y026rf+NNxwlY+uYRYDhOfuu3RUztIeKchh/KW4omebdqNAuxDk4uyreDAWAVPLiGqBg+GH1DcR7IsMvtJmLjsuZc2H33cpoAMSKq8hSpoOuFvOjyFBtobqrPxSiPoD3Ptwnewtw+z/KHfsAwORwAYEcXF0a7xXoDcr/h9USEAkmyMR3sep5q+8zvkHKoL/4ioomRC01J+XaLsYlcfSnFb/0dMiOSuhLNEOl/kouKsyWxOK4RbVfBzyZ/mv6IRpbyJY6Nw52+wxCk+2Q5FE1cHlmCcPHv+hjuVgER9IoNtBCy4ItBi8n266FhERT6YSzvT2ux+IMU9gXBwTCuPIJ996ZiA6iJitYNZM1X4pd7/r8J+nNwJUpNoO9yS8DSALHZynheihvo5x0YzpDB+CkwUBLk3N/t/wYB0WoR0P3gJz7jzoweOkBFu6eYVarCc1n1TYXaoMmieqxRhbkD4J7sV4'
		},
		{
			key: 'private_key',
			label: '私钥',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDH/VXZB2odguwMBOQr9LPBXomOZtqcs3q4HCZlF40asuBrwDZr\nZjLd6tp3e0C6ScoZdSIAwe9xYELyQywC7XFAqP2T1cOytxdYJ61neNL5eCVq4Vgf\nwzChl+Y9oh9JOZBOg+aQFrm6/TEQmDbc/UiHMXqPpiuccGxX1kZU85iANQIDAQAB\nAoGAPkBtaJEWRvlp4JPlMomJKrfyuZDqm7yChqy8hts94QGtOd0rE2NMkid4uZh0\nHYi6kBIV84Zqsi/0ptSh7odaqOifYfBfgvL7oLMTc1+SRPFGftyXCWiNMuto/CeB\nMPptOvBsNwXsTElWXtENf6NtzmUqdfcLf6ig3pOr8/XiHAECQQD1No6NZZZcZp9s\nM7m8OI9SlgmS9W/FeRKfYkQ9pIDwDp2gE/PeecxR2kVBoEFYXb/RhBRKuk47Sv9U\nGOxWa+/RAkEA0Ml/kDrui0xIgpnsi1cYYg2r9ZCXgCTXi/FOhNbV/tZayG0e50q/\nNqZnQSaPyUqHsF2/AKty5jckC/vrgJYnJQJACmESy51fLe4SFWxjEjp6po4/PX8y\nCfPD/AcWyF0sL/0OYvY1Pld9dIF+qPZ1jZ36Po4OpdMY+J2GDTM43beX4QJBALhg\nqTEiidQj2ojTC2yFzneQ4UGrnc7BOkRQJenzmulAPM1wZ/ETNkc5rkd/mUzGb4tV\nTj52KbKaEVAv+WoFr60CQHXgJJyzt3b/DzjBjNB+X5c93fULNz/BM0ES73EzNze5\n/+Bsg+wiQWgDJcXdAWEXSmABuviiHAMBhyaCM58+g68=\n-----END RSA PRIVATE KEY-----'
		},

	],
	valueType: 'string',

})
Widget.prototype.rsa_decryptUnicodeLong = function (text, private_key) {
	var jse = new JSEncrypt();
	jse.setPrivateKey(private_key);
	return jse.decryptUnicodeLong(text);
}

types['methods'].push({
	key: 'rsa_sign',
	label: 'RSA数字签名-签名',
	params: [
		{
			key: 'text',
			label: '文本',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '我爱Coco！'
		},
		{
			key: 'private_key',
			label: '私钥',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDH/VXZB2odguwMBOQr9LPBXomOZtqcs3q4HCZlF40asuBrwDZr\nZjLd6tp3e0C6ScoZdSIAwe9xYELyQywC7XFAqP2T1cOytxdYJ61neNL5eCVq4Vgf\nwzChl+Y9oh9JOZBOg+aQFrm6/TEQmDbc/UiHMXqPpiuccGxX1kZU85iANQIDAQAB\nAoGAPkBtaJEWRvlp4JPlMomJKrfyuZDqm7yChqy8hts94QGtOd0rE2NMkid4uZh0\nHYi6kBIV84Zqsi/0ptSh7odaqOifYfBfgvL7oLMTc1+SRPFGftyXCWiNMuto/CeB\nMPptOvBsNwXsTElWXtENf6NtzmUqdfcLf6ig3pOr8/XiHAECQQD1No6NZZZcZp9s\nM7m8OI9SlgmS9W/FeRKfYkQ9pIDwDp2gE/PeecxR2kVBoEFYXb/RhBRKuk47Sv9U\nGOxWa+/RAkEA0Ml/kDrui0xIgpnsi1cYYg2r9ZCXgCTXi/FOhNbV/tZayG0e50q/\nNqZnQSaPyUqHsF2/AKty5jckC/vrgJYnJQJACmESy51fLe4SFWxjEjp6po4/PX8y\nCfPD/AcWyF0sL/0OYvY1Pld9dIF+qPZ1jZ36Po4OpdMY+J2GDTM43beX4QJBALhg\nqTEiidQj2ojTC2yFzneQ4UGrnc7BOkRQJenzmulAPM1wZ/ETNkc5rkd/mUzGb4tV\nTj52KbKaEVAv+WoFr60CQHXgJJyzt3b/DzjBjNB+X5c93fULNz/BM0ES73EzNze5\n/+Bsg+wiQWgDJcXdAWEXSmABuviiHAMBhyaCM58+g68=\n-----END RSA PRIVATE KEY-----'
		},
		{
			key: 'algo',
			label: 'Hash算法',
			valueType: 'string',
			defaultValue: 'SHA256',
			dropdown: [
				{ label: 'MD5', value: 'MD5' },
				{ label: 'SHA1', value: 'SHA1' },
				{ label: 'SHA224', value: 'SHA224' },
				{ label: 'SHA256', value: 'SHA256' },
				{ label: 'SHA384', value: 'SHA384' },
				{ label: 'SHA512', value: 'SHA512' },
				{ label: 'RIPEMD160', value: 'RIPEMD160' },
			]
		},

	],
	valueType: 'string',

})
Widget.prototype.rsa_sign = function (text, private_key, algo) {
	var jse = new JSEncrypt();
	jse.setPrivateKey(private_key);
	return jse.sign(text, CryptoJS[algo], algo.toLowerCase())
}

types['methods'].push({
	key: 'rsa_verify',
	label: 'RSA数字签名-验签',
	params: [
		{
			key: 'text',
			label: '文本',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '我爱Coco！'
		},
		{
			key: 'sign',
			label: '签名',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: 'QKuQW6pNtBAUJtdKDHMGkNy5gwUehEkANaEw6fnOHLWo2rsW75Sf0xw7iguRHD2k1JmH6pjT6eqMTB+PiQ3s3/9Jk3WJW64265gPf3SyWKM7tkO2Oov37ws7m9yzmhxZAULfdP/kqDg7GLiau3FnzMA6ulbizRmS+6TG+/xVGXA='
		},
		{
			key: 'public_key',
			label: '公钥',
			valueType: 'multilineString',
			checkType: 'string',
			defaultValue: '-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDH/VXZB2odguwMBOQr9LPBXomO\nZtqcs3q4HCZlF40asuBrwDZrZjLd6tp3e0C6ScoZdSIAwe9xYELyQywC7XFAqP2T\n1cOytxdYJ61neNL5eCVq4VgfwzChl+Y9oh9JOZBOg+aQFrm6/TEQmDbc/UiHMXqP\npiuccGxX1kZU85iANQIDAQAB\n-----END PUBLIC KEY-----'
		},
		{
			key: 'algo',
			label: 'Hash算法',
			valueType: 'string',
			defaultValue: 'SHA256',
			dropdown: [
				{ label: 'MD5', value: 'MD5' },
				{ label: 'SHA1', value: 'SHA1' },
				{ label: 'SHA224', value: 'SHA224' },
				{ label: 'SHA256', value: 'SHA256' },
				{ label: 'SHA384', value: 'SHA384' },
				{ label: 'SHA512', value: 'SHA512' },
				{ label: 'RIPEMD160', value: 'RIPEMD160' },
			]
		},

	],
	valueType: 'boolean',

})
Widget.prototype.rsa_verify = function (text, sign, public_key, algo) {
	var jse = new JSEncrypt();
	jse.setPublicKey(public_key);
	return jse.verify(text, sign, CryptoJS[algo]);
}


exports.types = types;
exports.widget = Widget;